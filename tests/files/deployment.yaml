# Test Kubernetes configuration file
apiVersion: v1
kind: Pod
metadata:
  name: test-pod
  labels:
    app: test-app
    environment: test
spec:
  containers:
    - name: nginx-container
      image: nginx:1.21
      ports:
        - containerPort: 80
          protocol: TCP
      env:
        - name: DB_HOST
          value: localhost
        - name: DB_PORT
          value: "5432"
      resources:
        requests:
          memory: "64Mi"
          cpu: "250m"
        limits:
          memory: "128Mi"
          cpu: "500m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-deployment
  labels:
    app: test-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: test-app
  template:
    metadata:
      labels:
        app: test-app
    spec:
      containers:
        - name: web-server
          image: nginx:1.21
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: test-service
spec:
  selector:
    app: test-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: test-config
data:
  database_url: "postgresql://localhost:5432/mydb"
  api_key: "test-api-key"
  environment: "development"
---
apiVersion: v1
kind: Secret
metadata:
  name: test-secret
type: Opaque
data:
  username: dGVzdC11c2Vy
  password: dGVzdC1wYXNzd29yZA==
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: test.example.com
      http:
        paths:
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: test-service
                port:
                  number: 80 